name: Deploy to EC2

on:
    push:
        branches:
            - main # or your default branch
        paths:
            - "backend/**" # Only trigger on changes in backend directory

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Deploy to EC2
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      # Debug information
                      echo "Current user: $(whoami)"
                      echo "Current directory: $(pwd)"
                      echo "Listing /home/ubuntu:"
                      ls -la /home/ubuntu

                      # Check if directory exists
                      if [ ! -d "/home/ubuntu/Incognito" ]; then
                          echo "Error: /home/ubuntu/Incognito directory does not exist"
                          exit 1
                      fi

                      # Navigate to the project directory
                      cd /home/ubuntu/Incognito
                      echo "Current directory after cd: $(pwd)"

                      # Check git status
                      echo "Git status:"
                      git status

                      # Pull the latest changes
                      echo "Pulling latest changes..."
                      git pull origin main

                      # Navigate to backend directory
                      cd backend
                      echo "Current directory after cd to backend: $(pwd)"

                      # Check if venv exists
                      if [ ! -d "venv" ]; then
                          echo "Error: virtual environment not found"
                          exit 1
                      fi

                      # Activate virtual environment
                      echo "Activating virtual environment..."
                      source venv/bin/activate

                      # Install/update dependencies
                      echo "Installing dependencies..."
                      pip install -r requirements.txt

                      # Collect static files
                      echo "Collecting static files..."
                      python manage.py collectstatic --noinput

                      # Check if nginx config has changed
                      if ! cmp -s nginx/incognito.conf /etc/nginx/sites-available/incognito.conf; then
                          echo "Nginx configuration has changed, updating..."
                          sudo cp nginx/incognito.conf /etc/nginx/sites-available/
                          sudo ln -sf /etc/nginx/sites-available/incognito.conf /etc/nginx/sites-enabled/
                          sudo nginx -t && sudo systemctl restart nginx
                      else
                          echo "Nginx configuration unchanged"
                      fi

                      # Check if service exists
                      if ! systemctl list-unit-files | grep -q incognito.service; then
                          echo "Error: incognito.service not found"
                          exit 1
                      fi

                      # Restart Gunicorn service
                      echo "Restarting Gunicorn service..."
                      sudo systemctl restart incognito.service

                      # Check service status
                      echo "Service status:"
                      sudo systemctl status incognito.service
